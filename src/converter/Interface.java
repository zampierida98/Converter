package converter;

/**
 * The methods of this class initialize the interface and manage the events that
 * may occur when the user changes a parameter.
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface.
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpInputUnit = new javax.swing.ButtonGroup();
        grpOutputUnit = new javax.swing.ButtonGroup();
        grpInputFormat = new javax.swing.ButtonGroup();
        grpOutputFormat = new javax.swing.ButtonGroup();
        grpDataType = new javax.swing.ButtonGroup();
        boxDataType = new javax.swing.JPanel();
        radDataTypeLinear = new javax.swing.JRadioButton();
        radDataTypeArea = new javax.swing.JRadioButton();
        radDataTypeVolume = new javax.swing.JRadioButton();
        boxInput = new javax.swing.JPanel();
        boxInputUnit = new javax.swing.JPanel();
        radInputUnitMm = new javax.swing.JRadioButton();
        radInputUnitIn = new javax.swing.JRadioButton();
        lblInputUnitMmExp = new javax.swing.JLabel();
        lblInputUnitInExp = new javax.swing.JLabel();
        boxInputFormat = new javax.swing.JPanel();
        radInputFormatDecimal = new javax.swing.JRadioButton();
        radInputFormatFractional = new javax.swing.JRadioButton();
        boxData = new javax.swing.JPanel();
        textData = new javax.swing.JTextField();
        textNumerator = new javax.swing.JTextField();
        lblSeparator = new javax.swing.JLabel();
        textDenominator = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        boxOutput = new javax.swing.JPanel();
        boxOutputUnit = new javax.swing.JPanel();
        radOutputUnitMm = new javax.swing.JRadioButton();
        radOutputUnitIn = new javax.swing.JRadioButton();
        lblOutputUnitMmExp = new javax.swing.JLabel();
        lblOutputUnitInExp = new javax.swing.JLabel();
        boxOutputFormat = new javax.swing.JPanel();
        radOutputFormatDecimal = new javax.swing.JRadioButton();
        radOutputFormatFractional = new javax.swing.JRadioButton();
        boxResult = new javax.swing.JPanel();
        lblResult = new javax.swing.JLabel();
        lblResultUnit = new javax.swing.JLabel();
        lblResultUnitExp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Millimetre -> Inch  |  Inch -> Millimetre  CONVERTER");
        setSize(new java.awt.Dimension(800, 600));

        boxDataType.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data type", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxDataType.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        boxDataType.setPreferredSize(new java.awt.Dimension(100, 99));

        grpDataType.add(radDataTypeLinear);
        radDataTypeLinear.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radDataTypeLinear.setText("linear");
        radDataTypeLinear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExponentSetting(evt);
            }
        });

        grpDataType.add(radDataTypeArea);
        radDataTypeArea.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radDataTypeArea.setText("area");
        radDataTypeArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExponentSetting(evt);
            }
        });

        grpDataType.add(radDataTypeVolume);
        radDataTypeVolume.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radDataTypeVolume.setText("volume");
        radDataTypeVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExponentSetting(evt);
            }
        });

        javax.swing.GroupLayout boxDataTypeLayout = new javax.swing.GroupLayout(boxDataType);
        boxDataType.setLayout(boxDataTypeLayout);
        boxDataTypeLayout.setHorizontalGroup(
            boxDataTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxDataTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxDataTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radDataTypeLinear)
                    .addComponent(radDataTypeArea)
                    .addComponent(radDataTypeVolume))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        boxDataTypeLayout.setVerticalGroup(
            boxDataTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxDataTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radDataTypeLinear)
                .addGap(18, 18, 18)
                .addComponent(radDataTypeArea)
                .addGap(18, 18, 18)
                .addComponent(radDataTypeVolume)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        boxInput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxInput.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N

        boxInputUnit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Length unit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxInputUnit.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        boxInputUnit.setPreferredSize(new java.awt.Dimension(100, 76));

        grpInputUnit.add(radInputUnitMm);
        radInputUnitMm.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radInputUnitMm.setText("mm");
        radInputUnitMm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaunchConversion(evt);
            }
        });

        grpInputUnit.add(radInputUnitIn);
        radInputUnitIn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radInputUnitIn.setText("in");
        radInputUnitIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaunchConversion(evt);
            }
        });

        lblInputUnitMmExp.setFont(new java.awt.Font("Trebuchet MS", 0, 9)); // NOI18N
        lblInputUnitMmExp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblInputUnitMmExp.setToolTipText("");
        lblInputUnitMmExp.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lblInputUnitInExp.setFont(new java.awt.Font("Trebuchet MS", 0, 9)); // NOI18N
        lblInputUnitInExp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblInputUnitInExp.setToolTipText("");
        lblInputUnitInExp.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout boxInputUnitLayout = new javax.swing.GroupLayout(boxInputUnit);
        boxInputUnit.setLayout(boxInputUnitLayout);
        boxInputUnitLayout.setHorizontalGroup(
            boxInputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxInputUnitLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxInputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(boxInputUnitLayout.createSequentialGroup()
                        .addComponent(radInputUnitIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblInputUnitMmExp, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(37, Short.MAX_VALUE))
                    .addGroup(boxInputUnitLayout.createSequentialGroup()
                        .addComponent(radInputUnitMm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInputUnitInExp, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        boxInputUnitLayout.setVerticalGroup(
            boxInputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxInputUnitLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(boxInputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radInputUnitMm)
                    .addComponent(lblInputUnitInExp, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(boxInputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radInputUnitIn)
                    .addComponent(lblInputUnitMmExp, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        boxInputFormat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data format", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxInputFormat.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        boxInputFormat.setPreferredSize(new java.awt.Dimension(125, 76));

        grpInputFormat.add(radInputFormatDecimal);
        radInputFormatDecimal.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radInputFormatDecimal.setText("decimal");
        radInputFormatDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HideFractionFields(evt);
            }
        });

        grpInputFormat.add(radInputFormatFractional);
        radInputFormatFractional.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radInputFormatFractional.setText("fractional");
        radInputFormatFractional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowFractionFields(evt);
            }
        });

        javax.swing.GroupLayout boxInputFormatLayout = new javax.swing.GroupLayout(boxInputFormat);
        boxInputFormat.setLayout(boxInputFormatLayout);
        boxInputFormatLayout.setHorizontalGroup(
            boxInputFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxInputFormatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxInputFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radInputFormatDecimal)
                    .addComponent(radInputFormatFractional))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        boxInputFormatLayout.setVerticalGroup(
            boxInputFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxInputFormatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radInputFormatDecimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radInputFormatFractional))
        );

        boxData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxData.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N

        textData.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        textData.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        textNumerator.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        textNumerator.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblSeparator.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lblSeparator.setText("/");

        textDenominator.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        textDenominator.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSubmit.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        btnSubmit.setText("SUBMIT");
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaunchConversion(evt);
            }
        });

        javax.swing.GroupLayout boxDataLayout = new javax.swing.GroupLayout(boxData);
        boxData.setLayout(boxDataLayout);
        boxDataLayout.setHorizontalGroup(
            boxDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textData, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textNumerator, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSeparator)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textDenominator, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSubmit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        boxDataLayout.setVerticalGroup(
            boxDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNumerator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSeparator)
                    .addComponent(textDenominator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout boxInputLayout = new javax.swing.GroupLayout(boxInput);
        boxInput.setLayout(boxInputLayout);
        boxInputLayout.setHorizontalGroup(
            boxInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(boxInputLayout.createSequentialGroup()
                        .addComponent(boxInputUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(boxInputFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        boxInputLayout.setVerticalGroup(
            boxInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boxInputUnit, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(boxInputFormat, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(boxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        boxOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Output", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxOutput.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        boxOutput.setPreferredSize(new java.awt.Dimension(375, 207));

        boxOutputUnit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Length unit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxOutputUnit.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        boxOutputUnit.setPreferredSize(new java.awt.Dimension(100, 76));

        grpOutputUnit.add(radOutputUnitMm);
        radOutputUnitMm.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radOutputUnitMm.setText("mm");
        radOutputUnitMm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaunchConversion(evt);
            }
        });

        grpOutputUnit.add(radOutputUnitIn);
        radOutputUnitIn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radOutputUnitIn.setText("in");
        radOutputUnitIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaunchConversion(evt);
            }
        });

        lblOutputUnitMmExp.setFont(new java.awt.Font("Trebuchet MS", 0, 9)); // NOI18N
        lblOutputUnitMmExp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblOutputUnitMmExp.setToolTipText("");
        lblOutputUnitMmExp.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lblOutputUnitInExp.setFont(new java.awt.Font("Trebuchet MS", 0, 9)); // NOI18N
        lblOutputUnitInExp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblOutputUnitInExp.setToolTipText("");
        lblOutputUnitInExp.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout boxOutputUnitLayout = new javax.swing.GroupLayout(boxOutputUnit);
        boxOutputUnit.setLayout(boxOutputUnitLayout);
        boxOutputUnitLayout.setHorizontalGroup(
            boxOutputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxOutputUnitLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxOutputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(boxOutputUnitLayout.createSequentialGroup()
                        .addComponent(radOutputUnitIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblOutputUnitMmExp, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(37, Short.MAX_VALUE))
                    .addGroup(boxOutputUnitLayout.createSequentialGroup()
                        .addComponent(radOutputUnitMm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOutputUnitInExp, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        boxOutputUnitLayout.setVerticalGroup(
            boxOutputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxOutputUnitLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(boxOutputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radOutputUnitMm)
                    .addComponent(lblOutputUnitInExp, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(boxOutputUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radOutputUnitIn)
                    .addComponent(lblOutputUnitMmExp, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        boxOutputFormat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data format", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxOutputFormat.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        boxOutputFormat.setInheritsPopupMenu(true);
        boxOutputFormat.setPreferredSize(new java.awt.Dimension(125, 76));
        boxOutputFormat.setRequestFocusEnabled(false);

        grpOutputFormat.add(radOutputFormatDecimal);
        radOutputFormatDecimal.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radOutputFormatDecimal.setText("decimal");
        radOutputFormatDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaunchConversion(evt);
            }
        });

        grpOutputFormat.add(radOutputFormatFractional);
        radOutputFormatFractional.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        radOutputFormatFractional.setText("fractional");
        radOutputFormatFractional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LaunchConversion(evt);
            }
        });

        javax.swing.GroupLayout boxOutputFormatLayout = new javax.swing.GroupLayout(boxOutputFormat);
        boxOutputFormat.setLayout(boxOutputFormatLayout);
        boxOutputFormatLayout.setHorizontalGroup(
            boxOutputFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxOutputFormatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxOutputFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radOutputFormatDecimal)
                    .addComponent(radOutputFormatFractional))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        boxOutputFormatLayout.setVerticalGroup(
            boxOutputFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxOutputFormatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radOutputFormatDecimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radOutputFormatFractional))
        );

        boxResult.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Result", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 0, 11))); // NOI18N
        boxResult.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        boxResult.setPreferredSize(new java.awt.Dimension(225, 76));

        lblResult.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lblResult.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        lblResultUnit.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lblResultUnit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        lblResultUnitExp.setFont(new java.awt.Font("Trebuchet MS", 0, 9)); // NOI18N
        lblResultUnitExp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblResultUnitExp.setToolTipText("");
        lblResultUnitExp.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout boxResultLayout = new javax.swing.GroupLayout(boxResult);
        boxResult.setLayout(boxResultLayout);
        boxResultLayout.setHorizontalGroup(
            boxResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxResultLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblResult, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblResultUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(lblResultUnitExp, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        boxResultLayout.setVerticalGroup(
            boxResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxResultLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(boxResultLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(boxResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblResultUnit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblResultUnitExp, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout boxOutputLayout = new javax.swing.GroupLayout(boxOutput);
        boxOutput.setLayout(boxOutputLayout);
        boxOutputLayout.setHorizontalGroup(
            boxOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boxOutputUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boxOutputFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boxResult, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        boxOutputLayout.setVerticalGroup(
            boxOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boxOutputFormat, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(boxOutputUnit, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(boxResult, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boxOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boxInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(boxDataType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boxDataType, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(boxInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(boxOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method launches the conversion when the user clicks on the "submit"
     * button or changes any parameter by clicking on the associated radio
     * button.
     * <p>
     * First of all does some preliminary operations to clear the "result"
     * space, then sets all the parameters defined by the user in the relative
     * variables of the Converter class. Finally does the conversion according
     * to the defined parameters and puts the result in the "result" space.
     */
    private void LaunchConversion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LaunchConversion

        // Preliminary operations.
        this.lblResult.setText("");
        this.lblResultUnit.setText("");
        this.lblResultUnitExp.setVisible(false);

        // Instance of Converter class.
        Converter converter = new Converter();

        // Input unit setting.
        if (this.grpInputUnit.isSelected(this.radInputUnitMm.getModel())) {
            converter.setM_strInputUnit(this.radInputUnitMm.getText());
        } else {
            converter.setM_strInputUnit(this.radInputUnitIn.getText());
        }

        // Output unit setting.
        if (this.grpOutputUnit.isSelected(this.radOutputUnitMm.getModel())) {
            converter.setM_strOutputUnit(this.radOutputUnitMm.getText());
        } else {
            converter.setM_strOutputUnit(this.radOutputUnitIn.getText());
        }

        // Input format setting.
        if (this.grpInputFormat.isSelected(this.radInputFormatDecimal.getModel())) {
            converter.setM_strInputFormat(this.radInputFormatDecimal.getText());
        } else {
            converter.setM_strInputFormat(this.radInputFormatFractional.getText());
        }

        // Output format setting.
        if (this.grpOutputFormat.isSelected(this.radOutputFormatDecimal.getModel())) {
            converter.setM_strOutputFormat(this.radOutputFormatDecimal.getText());
        } else {
            converter.setM_strOutputFormat(this.radOutputFormatFractional.getText());
        }

        // Data type setting.
        if (this.grpDataType.isSelected(this.radDataTypeLinear.getModel())) {
            converter.setM_intDataType(1);
        } else if (this.grpDataType.isSelected(this.radDataTypeArea.getModel())) {
            converter.setM_intDataType(2);
        } else {
            converter.setM_intDataType(3);
        }

        // Conversion.
        String strResult = "";
        if (converter.getM_strInputFormat().equals(converter.getM_strOutputFormat())
                && converter.getM_strInputUnit().equals(converter.getM_strOutputUnit())) {
            strResult = "No conversion to do";
        } else if (converter.getM_strInputFormat().equals(converter.getM_strOutputFormat())) {
            switch (converter.getM_strInputFormat()) {
                case "decimal":
                    strResult = converter.DecimalConversion(this.textData.getText());
                    break;
                case "fractional":
                    strResult = converter.FractionalConversion(this.textData.getText(),
                            this.textNumerator.getText(), this.textDenominator.getText());
                    break;
            }
        } else if (converter.getM_strInputUnit().equals(converter.getM_strOutputUnit())) {
            switch (converter.getM_strInputFormat()) {
                case "decimal":
                    strResult = converter.DecimalToFractional(this.textData.getText());
                    break;
                case "fractional":
                    strResult = converter.FractionalToDecimal(this.textData.getText(),
                            this.textNumerator.getText(), this.textDenominator.getText());
                    break;
            }
        } else {
            switch (converter.getM_strInputFormat()) {
                case "decimal":
                    String strFraction = converter.DecimalConversion(this.textData.getText());
                    strResult = converter.DecimalToFractional(strFraction);
                    break;
                case "fractional":
                    String strData = converter.FractionalToDecimal(this.textData.getText(),
                            this.textNumerator.getText(), this.textDenominator.getText());
                    if (strData.equals("Wrong fraction")) {
                        strResult = strData;
                    } else {
                        strResult = converter.DecimalConversion(strData);
                    }
                    break;
            }
        }

        // Result.
        this.lblResult.setText(strResult);
        switch (this.lblResult.getText()) {
            case "No conversion to do":
            case "Change the output format":
                this.textData.requestFocusInWindow();
                break;
            case "Invalid data":
                this.textData.requestFocusInWindow();
                break;
            case "Invalid numerator":
                this.textNumerator.requestFocusInWindow();
                break;
            case "Invalid denominator":
                this.textDenominator.requestFocusInWindow();
                break;
            default:
                this.lblResultUnit.setText(converter.getM_strOutputUnit());
                this.lblResultUnitExp.setVisible(true);
                this.textData.requestFocusInWindow();
                break;
        }

    }//GEN-LAST:event_LaunchConversion

    /**
     * This method deactivates and clears the fraction fields in the "data"
     * space when the user chooses "decimal" as input format.
     * <p>
     * It disables and clears "numerator" and "denominator" spaces and then
     * launches the conversion.
     */
    private void HideFractionFields(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideFractionFields

        // Deactivation and cleaning of the fraction fields.
        this.textNumerator.setText("");
        this.textDenominator.setText("");
        this.textNumerator.setEnabled(false);
        this.textDenominator.setEnabled(false);

        // Launch of the conversion.
        this.LaunchConversion(evt);

    }//GEN-LAST:event_HideFractionFields

    /**
     * This method activates the fraction fields in the "data" space when the
     * user chooses "fractional" as input format.
     * <p>
     * It does some preliminary operations to clear the "result" space and then
     * enables "numerator" and "denominator" spaces.
     */
    private void ShowFractionFields(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowFractionFields

        // Preliminary operations.
        this.lblResult.setText("");
        this.lblResultUnit.setText("");
        this.lblResultUnitExp.setVisible(false);
        this.textData.requestFocusInWindow();

        // Activation of the fraction fields
        this.textNumerator.setEnabled(true);
        this.textDenominator.setEnabled(true);

    }//GEN-LAST:event_ShowFractionFields

    /**
     * This method sets the correct exponent for all units.
     * <p>
     * It chooses the exponent according to the "data type" parameter and then
     * launches the conversion.
     */
    private void ExponentSetting(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExponentSetting

        // Setting of the string that represent the exponent.
        String strExponent;
        if (this.grpDataType.isSelected(this.radDataTypeLinear.getModel())) {
            strExponent = "";
        } else if (this.grpDataType.isSelected(this.radDataTypeArea.getModel())) {
            strExponent = "2";
        } else {
            strExponent = "3";
        }
        
        // Setting of the previous string in the specific labels.
        this.lblInputUnitMmExp.setText(strExponent);
        this.lblInputUnitInExp.setText(strExponent);
        this.lblOutputUnitMmExp.setText(strExponent);
        this.lblOutputUnitInExp.setText(strExponent);
        this.lblResultUnitExp.setText(strExponent);
        
        // Launch of the conversion.
        this.LaunchConversion(evt);

    }//GEN-LAST:event_ExponentSetting

    /**
     * Main method of the class.
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                // Create the form.
                Interface gui = new Interface();

                // Preliminary operations.
                gui.radInputUnitMm.setSelected(true);
                gui.radOutputUnitMm.setSelected(true);
                gui.radInputFormatDecimal.setSelected(true);
                gui.radOutputFormatDecimal.setSelected(true);
                gui.radDataTypeLinear.setSelected(true);
                gui.textNumerator.setEnabled(false);
                gui.textDenominator.setEnabled(false);
                gui.textData.requestFocusInWindow();

                // Display the form.
                gui.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boxData;
    private javax.swing.JPanel boxDataType;
    private javax.swing.JPanel boxInput;
    private javax.swing.JPanel boxInputFormat;
    private javax.swing.JPanel boxInputUnit;
    private javax.swing.JPanel boxOutput;
    private javax.swing.JPanel boxOutputFormat;
    private javax.swing.JPanel boxOutputUnit;
    private javax.swing.JPanel boxResult;
    private javax.swing.JButton btnSubmit;
    private javax.swing.ButtonGroup grpDataType;
    private javax.swing.ButtonGroup grpInputFormat;
    private javax.swing.ButtonGroup grpInputUnit;
    private javax.swing.ButtonGroup grpOutputFormat;
    private javax.swing.ButtonGroup grpOutputUnit;
    private javax.swing.JLabel lblInputUnitInExp;
    private javax.swing.JLabel lblInputUnitMmExp;
    private javax.swing.JLabel lblOutputUnitInExp;
    private javax.swing.JLabel lblOutputUnitMmExp;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblResultUnit;
    private javax.swing.JLabel lblResultUnitExp;
    private javax.swing.JLabel lblSeparator;
    private javax.swing.JRadioButton radDataTypeArea;
    private javax.swing.JRadioButton radDataTypeLinear;
    private javax.swing.JRadioButton radDataTypeVolume;
    private javax.swing.JRadioButton radInputFormatDecimal;
    private javax.swing.JRadioButton radInputFormatFractional;
    private javax.swing.JRadioButton radInputUnitIn;
    private javax.swing.JRadioButton radInputUnitMm;
    private javax.swing.JRadioButton radOutputFormatDecimal;
    private javax.swing.JRadioButton radOutputFormatFractional;
    private javax.swing.JRadioButton radOutputUnitIn;
    private javax.swing.JRadioButton radOutputUnitMm;
    private javax.swing.JTextField textData;
    private javax.swing.JTextField textDenominator;
    private javax.swing.JTextField textNumerator;
    // End of variables declaration//GEN-END:variables
}
